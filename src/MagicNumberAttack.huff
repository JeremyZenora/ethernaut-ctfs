#define macro MAIN() = takes(0) returns(0) {
    // Push 42 onto the stack
    0x2a        // 42 in hexadecimal
    
    // Store it in memory at position 0
    0x00 mstore
    
    // Return the value (32 bytes) from memory at position 0
    0x20 0x00 return
}


// MY SOLUTION SCRIPT

// // SPDX-License-Identifier: MIT
// pragma solidity ^0.8.0;

// import "forge-std/Script.sol";

// contract DeployHuff is Script {
//     function run() external {
//         vm.startBroadcast();

//         // Paste the compiled bytecode here
//         bytes memory bytecode = hex"60088060093d393df3602a5f5260205ff3";  // huffc src/MagicNumberAttack.huff -o out/MeaningOfLife.bin -b i got bytecode with this

//         address deployedAddr;
//         assembly {
//             deployedAddr := create(0, add(bytecode, 0x20), mload(bytecode))
//         }

//         console.log("Deployed Huff Contract at address: ", deployedAddr);

//         vm.stopBroadcast();
//     }
// }
